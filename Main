/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Project/Maven2/JavaApp/src/main/java/${packagePath}/${mainClassName}.java to edit this template
 */

package com.sgsstudios.Main;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author SadBo
 */
public class Main {
    
    public static ArrayList<Pecas> estoque;
    public static ArrayList<Clientes> clientes;
    private static String barra = "================================";
    private static boolean running = true;
    private static Scanner scan;
            
    public static void main(String[] args) throws Exception {
        estoque = new ArrayList<Pecas>();
        scan = new Scanner(System.in);
        clientes = new ArrayList<Clientes>();
        
        loading();
        
        while(running){
            try{
                System.out.println(barra);
                System.out.println("Bem Vindo a nossa loja de Informatica");
                System.out.println("1 - Adicionar Peca, 2 - Listar Pecas, 3 - Vender Peca");
                System.out.println("4 - Sair");
                System.out.println("Opcao: ");
                menu(scan.nextInt());
            }catch(Exception e){System.out.println(barra);System.out.println(e.getMessage());}
        }
        
            
        
        
    }
    
    private static void menu(int option) throws Exception{
        
        switch(option){
            
            case 1:
                //Adicionar Pecas ao estoque
                System.out.println(barra);
                Pecas temp;
                
                String nomeTemp;
                System.out.println("Insira o nome da peca");
                nomeTemp = scan.nextLine();
                nomeTemp = scan.nextLine();
                System.out.println("Nome: " + nomeTemp);
                
                double valor;
                System.out.println("Insira o valor da peca");
                valor = Double.parseDouble(scan.nextLine());
                System.out.println("Valor: " + valor);
                
                int categoria;
                System.out.println("Insira o numero da categoria da peca");
                System.out.println(barra);
                System.out.println("1 - Processador, 2 - Placa Mae, 3 - Placa de Video");
                System.out.println("4 - Fonte, 5 - RAM, 6 - Gabinete, 7 - Acessorio PC");
                System.out.println("8 - Monitor, 9 - Periferico");
                categoria = scan.nextInt();
                System.out.println("Categoria: " + Pecas.getCategoriaString(categoria));
                
                temp = new Pecas(nomeTemp,categoria,valor);
                System.out.println("Foi adicionada a peca " + temp.getNome());
                estoque.add(temp);
                
                break;
                
                
            case 2:
                //Listar pecas no estoque
                
                listarPecas();
                
                break;
            case 3:
                //Vender peca
                listarPecas();
                System.out.println("Digite o ID da peca a vender: ");
                int idPeca = scan.nextInt();
                if(idPeca < 0 && idPeca > estoque.size()){
                    return;
                }
                
                
                System.out.println("Digite o nome do cliente: ");
                scan.nextLine();
                String nomeCliente = scan.nextLine();
                if(nomeCliente == ""){
                    return;
                }
                
                for (int i = 0; i < clientes.size(); i++) {
                    
                    if (clientes.get(i).getNome().equalsIgnoreCase(nomeCliente)) {
                        
                        System.out.println("Esse cliente ja existe");
                        System.out.println("Adicionando a Peca no nome dele");
                        for (int j = 0; j < estoque.size(); j++) {
                            
                            if (estoque.get(j).getId() == idPeca) {
                                
                                clientes.get(i).addCompra(estoque.get(j));
                                return;
                            }
                            
                        }
                        
                    }
                    
                }
                
                System.out.println("Digite o cpf do cliente: ");
                String cpf = scan.nextLine();
                if(cpf == ""){
                    return;
                }
                
                for (int i = 0; i < estoque.size(); i++) {
                    
                    if (estoque.get(i).getId() == idPeca) {
                        
                        Clientes clienteTemp = new Clientes(nomeCliente,cpf);
                        clienteTemp.addCompra(estoque.get(i));
                        clientes.add(clienteTemp);
                        
                    }
                    
                }
                
                break;
            case 4:
                //Sair
                running = false;
                saving();
                System.out.println("Ate mais");
                break;
            default:
                //Opcao Incorreta
                break;
        }
        
    }
    
    private static void loading() throws Exception{
        
        ObjectInputStream objInput;
        File file;
        
        try{
        file = new File("clientes.obj");
        objInput = new ObjectInputStream(new FileInputStream(file));
        
        Clientes cliente;
        cliente = (Clientes)objInput.readObject();
        
        while(cliente != null){
            clientes.add(cliente);
            cliente = (Clientes) objInput.readObject();
        }
        
        objInput.close();
        }catch(Exception e){
            System.out.println(e.getMessage());   
        }
        try{
        file = new File("pecas.obj");
        objInput = new ObjectInputStream(new FileInputStream(file));
        Pecas peca;
        peca = (Pecas) objInput.readObject();
        while(peca != null){
            
            estoque.add(peca);
            peca = (Pecas) objInput.readObject();
            
        }

        objInput.close();
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    private static void saving() throws Exception{
        
        File file;
        file = new File("pecas.obj");
        ObjectOutputStream objOutput = new ObjectOutputStream(new FileOutputStream(file));
        
        for (int i = 0; i < estoque.size(); i++) {
            
            objOutput.writeObject(estoque.get(i));
            
        }
        
        file = new File("clientes.obj");
        objOutput = new ObjectOutputStream(new FileOutputStream(file));
        
        for (int i = 0; i < clientes.size(); i++) {
            
            objOutput.writeObject(clientes.get(i));
            
        }
        
        objOutput.close();
        
    }
    
    public static void listarPecas(){
        
        for (int i = 0; i < estoque.size(); i++) {
                    
                    System.out.println(barra);
                    System.out.println(estoque.get(i).toString());
                    
                }
        
    }
    
}
